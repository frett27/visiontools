<?xml version="1.0"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd" [
  <!ENTITY tex "TeX">
  <!ENTITY latex "LaTeX">
]>
<book lang="en">
  <title>SIMPLE_JPEG_LIB MANUAL</title>
<!-- %**end of header -->
<!-- This title page illustrates only one of the -->
<!-- two methods of forming a title page. -->
<!-- node-name,  next,  previous,  up -->
<!-- node-name,     next,           previous, up -->
  <chapter label="1" id="Introduction">
    <para>Introduction to the simple_jpeg_lib</para>
    <informalfigure>Introduction</informalfigure>
    <para><emphasis role="bold">Simple_Jpeg_Lib</emphasis> is a simple library that permit to load, save and use jpeg files. This library provide a simple set of functions for jpeg manipulation.</para>
  </chapter>

  <chapter label="2" id="Compiling">
    <para>Compiling Ada programs with the Simple_Jpeg_Lib
Simple_Jpeg_Lib contains a small c wrapper to easy the binding with the jpeglib. this wapper <emphasis role="bold">c_simple_jpeg_lib.c</emphasis> must be compiled with the same compiler of the jpeglib, or the same compile options (internal jpeglib structures must have the same definition in the jpeglib and in the wrapper).</para>

    <sect2 label="2.0.1">
      <para>compiling the simple_jpeg_lib
<lineannotation><![CDATA[

rem
rem Simple script for compiling Ada Jpeg Bindings
rem 

gcc -c -g c_simple_jpeg_lib.c -I../Dependencies/jpeg-6b

gnatmake -c -g -gnatf simple_jpeg_lib.adb

]]></lineannotation></para>
    </sect2>

    <sect2 label="2.0.2">
      <para>compiling a program with the simple_jpeg_lib
To compile your program, you must first compile the simple_jpeg_lib, and then link to your program :</para>
      <listitem mark="bullet">
        <variablelist>c_simple_jpeg_lib.o</variablelist>
        <variablelist>libjpeglib.a</variablelist>
      
      </listitem>
      <para>Example :</para>
      <programlisting>
gcc -c  ../src/c_simple_jpeg_lib.c -I../Dependencies/jpeg-6b

gnatmake -g -gnatf -gnatov -gnaty -I../src test_jpeg_reader -largs c_simple_jpeg_lib.o -ljpeg -bargs -E


</programlisting>
    </sect2>
  </chapter>

  <chapter label="3" id="Simple-Jpeg-Lib">
    <para>Using the simple_jpeg_lib
</para>
    <sect1 label="3.1">
      <para>reading a jpeg file</para>
      <programlisting>

with simple_jpeg_lib;
use simple_jpeg_lib;

procedure test_jpeg_reader is

   J : Jpeg_Handle_decompress;
   JC : Jpeg_Handle_Compress;
   I:Integer := 0;

begin

       -- open image, and decompress it with 1/8 of the original size
      Open_Jpeg("sample.jpg",J,8);

      -- Get Informations
      declare
         W,H : Dimension ;
         Jpegtype : Jpeg_Type;
      begin
         Get_Image_Info(J,W,H,jpegtype);

         Text_Io.Put(" Width :" &amp; dimension'Image(W)
                     &amp; " , height " &amp; dimension'Image(h)
                     &amp; " , nb comp : " &amp; Jpeg_type'Image(jpegtype) );

         Create_Jpeg("output.jpg",Jc,W,H,jpegtype);
      end;

      declare
      begin
         while True loop
            declare
               Comp : Component_Array := Read_Next_Line(J);
            begin
               Write_Line(JC,Comp);
               I:=I+1; -- count the lines
            end;
         end loop;
      exception
         when JPEG_EXCEPTION  =&gt;
            null;
      end;

      Text_Io.New_Line;
      Text_Io.Put( Integer'Image(I) &amp; " read Lines ");

      Close_Jpeg(J);
      Close_Jpeg(jc);

      Text_Io.Put("End  ");
      Text_Io.New_Line;

exception
        when E : others =&gt;
           Text_IO.Put_Line (GNAT.Traceback.Symbolic.Symbolic_Traceback (E));

end;

</programlisting>
    </sect1>
  </chapter>
xreflabel="Concept Index">
    <para>Concept Index
<tgroup>I
  <secondaryie>
    <indexdiv>Introduction, see </indexdiv></secondaryie></tgroup></para>
</book><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-indent-step:1
sgml-indent-data:nil
End:
-->
